version: '3.4'

# This Compose file is expected to be used with the devnet-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  l2_data:
  suave_l2_data:
  safedb_data:
  challenger_data:
  da_data:
  op_log:

networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

services:
  op_stack_go_builder:  # Not an actual service, but builds the prerequisite go images
    build:
      context: ../
      dockerfile: ops/docker/op-stack-go/Dockerfile
      args:
        GIT_COMMIT: "dev"
        GIT_DATE: "0"
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    entrypoint: ["echo", "build complete"]

  l1:
    build:
      context: .
      dockerfile: Dockerfile.l1
    ports:
      - "8545:8545"
      - "8546:8546"
      - "7060:6060"
    volumes:
      - "l1_data:/db"
      - "${PWD}/../.devnet/genesis-l1.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
    environment:
      GETH_MINER_RECOMMIT: 100ms
    networks:
      - custom_net

  l2:
    build:
      context: .
      dockerfile: Dockerfile.l2
    ports:
      - "9545:8545"
      - "8060:6060"
    volumes:
      - "l2_data:/db"
      - "${PWD}/../.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
    entrypoint:  # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
      - "--authrpc.jwtsecret=/config/test-jwt-secret.txt"
      - "--nat=extip:10.5.0.200"
      - "--nodekeyhex=e8e00ec43b690f02844ed9b062decc3d613323cd136cf3bfbd30f1635698e5e4"
      - "--rollup.disabletxpoolgossip"
    environment:
      GETH_MINER_RECOMMIT: 100ms
    networks:
      custom_net:
        ipv4_address: "10.5.0.200"

  op-node:
    depends_on:
      - op_stack_go_builder
      - l1
      - l2
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:devnet
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://l2:8551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --p2p.advertise.ip=10.5.0.5
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
      --safedb.path=/db
      --plasma.enabled=${PLASMA_ENABLED}
      --plasma.da-server=http://da-server:3100
      --l2.builder=http://suave-geth:9062
    ports:
      - "7545:8545"
      - "9003:9003"
      - "7300:7300"
      - "6060:6060"
    volumes:
      - "safedb_data:/db"
      - "${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt"
      - "${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
      - "${PWD}/../.devnet/rollup.json:/rollup.json"
      - op_log:/op_log
    networks:
      custom_net:
        ipv4_address: 10.5.0.5

  op-proposer:
    depends_on:
      - op_stack_go_builder
      - l1
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-proposer/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-proposer:devnet
    ports:
      - "6062:6060"
      - "7302:7300"
      - "6546:8545"
    environment:
      OP_PROPOSER_L1_ETH_RPC: http://l1:8545
      OP_PROPOSER_ROLLUP_RPC: http://op-node:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_L2OO_ADDRESS: "${L2OO_ADDRESS}"
      OP_PROPOSER_GAME_FACTORY_ADDRESS: "${DGF_ADDRESS}"
      OP_PROPOSER_GAME_TYPE: "${DG_TYPE}"
      OP_PROPOSER_PROPOSAL_INTERVAL: "${PROPOSAL_INTERVAL}"
      OP_PROPOSER_PPROF_ENABLED: "true"
      OP_PROPOSER_METRICS_ENABLED: "true"
      OP_PROPOSER_ALLOW_NON_FINALIZED: "true"
      OP_PROPOSER_RPC_ENABLE_ADMIN: "true"
    networks:
      - custom_net

  op-batcher:
    depends_on:
      - op_stack_go_builder
      - l1
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-batcher/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher:devnet
    ports:
      - "6061:6060"
      - "7301:7300"
      - "6545:8545"
    environment:
      OP_BATCHER_L1_ETH_RPC: http://l1:8545
      OP_BATCHER_L2_ETH_RPC: http://l2:8545
      OP_BATCHER_ROLLUP_RPC: http://op-node:8545
      OP_BATCHER_MAX_CHANNEL_DURATION: 1
      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_MNEMONIC: test test test test test test test test test test test junk
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_PPROF_ENABLED: "true"
      OP_BATCHER_METRICS_ENABLED: "true"
      OP_BATCHER_RPC_ENABLE_ADMIN: "true"
      OP_BATCHER_BATCH_TYPE: 0
      OP_BATCHER_PLASMA_ENABLED: "${PLASMA_ENABLED}"
      OP_BATCHER_PLASMA_DA_SERVER: "http://da-server:3100"
    networks:
      - custom_net


  op-challenger:
    depends_on:
      - op_stack_go_builder
      - l1
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-challenger/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-challenger:devnet
    volumes:
      - "challenger_data:/db"
      - "../op-program/bin:/op-program"
    environment:
      OP_CHALLENGER_L1_ETH_RPC: http://l1:8545
      # Note: this will need to be updated to point to a L1 consensus node when there is one in the devnet
      OP_CHALLENGER_L1_BEACON: "unset"
      OP_CHALLENGER_ROLLUP_RPC: http://op-node:8545
      OP_CHALLENGER_TRACE_TYPE: cannon
      OP_CHALLENGER_GAME_FACTORY_ADDRESS: ${DGF_ADDRESS}
      # The devnet can't set the absolute prestate output root because the contracts are deployed in L1 genesis
      # before the L2 genesis is known.
      OP_CHALLENGER_UNSAFE_ALLOW_INVALID_PRESTATE: "true"
      OP_CHALLENGER_DATADIR: /db
      OP_CHALLENGER_CANNON_ROLLUP_CONFIG: ./.devnet/rollup.json
      OP_CHALLENGER_CANNON_L2_GENESIS: ./.devnet/genesis-l2.json
      OP_CHALLENGER_CANNON_BIN: ./cannon/bin/cannon
      OP_CHALLENGER_CANNON_SERVER: /op-program/op-program
      OP_CHALLENGER_CANNON_PRESTATE: /op-program/prestate.json
      OP_CHALLENGER_L2_ETH_RPC: http://l2:8545
      OP_CHALLENGER_MNEMONIC: test test test test test test test test test test test junk
      OP_CHALLENGER_HD_PATH: "m/44'/60'/0'/0/4"
      OP_CHALLENGER_NUM_CONFIRMATIONS: 1
    networks:
      - custom_net

  da-server:
    depends_on:
      - op_stack_go_builder
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/da-server:devnet
    build:
      context: ../
      dockerfile: ./op-plasma/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    command: >
      da-server
      --file.path=/data
      --addr=0.0.0.0
      --port=3100
      --log.level=debug
    ports:
      - "3100:3100"
    volumes:
      - "da_data:/data"

  sentinel:
    image: quarry/sentinel # TODO(10141): We need a public image for this (sentinel is out of repo)
    volumes:
      - "${PWD}/../.devnet/rollup.json:/rollup.json"
    # private-key is mnemonic index 5 of the test mnemonic.
    command: >
      sentinel
      --datadir=data
      --l1-rpc-http=http://l1:8545
      --l1-rpc-ws=ws://l1:8546
      --da-storage-uri=http://da-server:3100
      --private-key=0x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --config=/rollup.json

  artifact-server:
    depends_on:
      - l1
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - "${PWD}/../.devnet/:/usr/share/nginx/html/:ro"
    security_opt:
      - "no-new-privileges:true"
    networks:
      - custom_net

  # mev-boost:
  #   profiles:
  #     - suave
  #   depends_on:
  #     - l1
  #     - l2
  #   image: flashbots/mev-boost:latest
  #   command:
  #     - -addr=0.0.0.0:18550
  #     - -relay=http://suave-geth:8545
  #     - -request-timeout-getpayload=500
  #   ports:
  #     - "18550:18550"
  #

  ##################################################
  #                 Suave Section                  #
  ##################################################

  suave-op-node:
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:devnet
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://suave-op-geth:8551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --rollup.config=/rollup.json
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --p2p.bootnodes=enr:-J24QGG7tyXLYkko-b6VwT1tI23jesehLEjMS_Dv8OepXrNPd3DObDrHAYpwDJLh-Go95HclbPVdm91oEDXfhE5ZUPaGAY5jmAZxgmlkgnY0gmlwhAoFAAWHb3BzdGFja4OFBwCJc2VjcDI1NmsxoQNNEvj5nPIMVFBRRvGU95BqlwRDrY_8aua6eTI_sV_yKIN0Y3CCIyuDdWRwgiMr
      --rpc.addr=0.0.0.0
      --rpc.port=9545
      --syncmode=execution-layer
    volumes:
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
      - "${PWD}/../.devnet/rollup.json:/rollup.json"
    ports:
      - 9546:9546
    networks:
      custom_net:
        ipv4_address: 10.5.0.123

  suave-geth:
    depends_on:
      - suave-op-geth
    image: jinmel/suave-geth:optimism
    command:
      - --dev
      - --dev.gaslimit=18446744073709551615
      - --http
      - --http.port=8545
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.port=8546
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --datadir=/data
      - --keystore=/keystore/keystore
      - --unlock=0xB5fEAfbDD752ad52Afb7e1bD2E40432A485bBB7F
      - --password=/keystore/password.txt
      - --log.debug
      - --suave.eth.remote_endpoint=http://suave-op-geth:8545
      - --suave.local-relay-addr=0.0.0.0:9062
    volumes:
      - "${PWD}/suave-ex-node:/keystore"
    ports:
      - 11545:8545
      - 11546:8546
    networks:
      - custom_net

  suave-op-geth:
    build:
      context: .
      dockerfile: Dockerfile.l2-suave
    ports:
      - "5545:8545"
    volumes:
      - "${PWD}/../.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
    entrypoint:  # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
      - "--authrpc.jwtsecret=/config/test-jwt-secret.txt"
      - "--suave"
      - "--suave.beacon_endpoint=http://suave-op-node:9546"
      - "--http.api=web3,debug,eth,txpool,net,engine,suavex"
      - "--syncmode=snap"
      - "--bootnodes=enode://e42b01e82d3cf3e43bf8709509baf2043923f998693b405f67c7643950c904391bb58e363ac48e9b7137cb5491b6fa359e4d4b95caaa0ef3570073332e09f659@10.5.0.200:30303"
      - "--nat=extip:10.5.0.201"
      - "--rollup.disabletxpoolgossip"
    environment:
      GETH_MINER_RECOMMIT: 100ms
    networks:
      custom_net:
        ipv4_address: "10.5.0.201"
